package by.epamtc.jwd.appliances_db.app;

import by.epamtc.jwd.appliances_db.appliances.Device;
import by.epamtc.jwd.appliances_db.condition.DeviceCondition;
import by.epamtc.jwd.appliances_db.split.SplitDevice;

import java.io.*;
import java.util.*;

public class Solution {

    private String nameDevice;
    private List<Device> selectDevice;
    private String filePath;
    private DeviceCondition condition;
    private SplitDevice splitDevice;

    public Solution(String nameDevice) {
        this.nameDevice = nameDevice;
        selectDevice = new ArrayList<>();
    }

    public void setFilePath(String filePath) {
        this.filePath = filePath;
    }

    public void setCondition(DeviceCondition condition) {
        this.condition = condition;
    }

    public void setNameDevice(String nameDevice) {
        this.nameDevice = nameDevice;
    }

    public void setSplitDevice(SplitDevice splitDevice) {
        this.splitDevice = splitDevice;
    }

    public List<Device> runApp() {

        try (FileReader fileReader = new FileReader(new File(filePath));
             BufferedReader reader = new BufferedReader(fileReader)) {
            String line = reader.readLine();

            while (line != null) {

                if (splitDevice.ArraySplitLine()[0].trim().equals(nameDevice)) {

                    Device currentDevice = new Device(splitDevice.ArraySplitLine());
                    condition.setAreaSeeking(currentDevice.getProperty());

                    if (!condition.isCondition()) {
                        selectDevice.add(currentDevice);
                    }
                }

                line = reader.readLine();

            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        
        return  selectDevice;
    }
}
